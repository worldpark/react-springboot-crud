{"version":3,"sources":["Mobile/NavBar.jsx","ApiService.js","Mobile/BoardList.jsx","Mobile/CreateBoard.jsx","Mobile/BoardView.jsx","Mobile/UpdateBoard.jsx","Mobile/Main.jsx","Mobile/RouterComponent.jsx","PC/PCNavBar.jsx","PC/PCBoardList.jsx","PC/PCCreateBoard.jsx","PC/PCBoardView.jsx","PC/PCUpdateBoard.jsx","PC/PCMain.jsx","PC/PCRouterComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","handleDrawerToggle","setState","toggle","state","classes","this","className","root","AppBar","Toolbar","IconButton","menuButton","edge","aria-lable","color","onClick","Typography","variant","style","Drawer","open","MenuItem","Link","component","RouterLink","to","React","Component","flexGrow","withStyles","USER_API_BASE_URL2","p_num","axios","get","boardID","delete","board","post","put","bid","PCBoardList","reloadBoardList","ApiService","fetchBoards","then","res","boards","data","list","paging","pagingData","currentPageNum","catch","err","console","log","createBoard","window","localStorage","removeItem","history","push","pageNums","i","pageNumStart","pageNumEnd","map","page","listBoard","toString","prev","tabIndex","next","pageNumCountTotal","Container","TableContainer","Paper","type","id","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","testBoard","title","nickname","createdate","aria-label","isMoveToFirstPage","isPagingPrev","viewPaging","isPagingNext","isMoveToLastPage","PCCreateBoard","onChange","e","target","name","value","saveBoard","preventDefault","password","content","addBoard","message","TextField","placeholder","fullWidth","margin","multiline","rows","Button","display","justifyContent","editBoard","BID","passwd","msg","setItem","deleteBoard","match","params","fetchBoardByID","InputProps","readOnly","PCUpdateBoard","loadBoard","getItem","goback","Main","marginTop","AppRouter","exact","path","CreateBoard","BoardView","UpdateBoard","BoardList","PCNavBar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","activeClassName","PCMain","PCBoardView","App","isPc","useMediaQuery","query","isTablet","isMobile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a43b9997.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: false\r\n        };\r\n    }\r\n\r\n    handleDrawerToggle = () => this.setState({\r\n         toggle: !this.state.toggle \r\n        })\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <IconButton className={classes.menuButton} edge=\"start\" aria-lable=\"Menu\" color=\"inherit\" onClick={this.handleDrawerToggle}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" style={style}>\r\n                            React User Application\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer open={this.state.toggle}>\r\n                    <MenuItem onClick={this.handleDrawerToggle}>\r\n                        <Link component={RouterLink} to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleDrawerToggle}>\r\n                        <Link component={RouterLink} to=\"/board\">\r\n                            Board\r\n                        </Link>\r\n                    </MenuItem>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    flexGrow: 1\r\n}\r\n\r\nexport default withStyles(styles)(NavBar);","import axios from \"axios\";\r\n\r\nconst USER_API_BASE_URL2 = \"http://localhost:8080/board\";\r\n\r\nclass ApiService{\r\n    \r\n    fetchBoards(p_num) {\r\n        return axios.get(USER_API_BASE_URL2 + \"?p_num=\" + p_num);\r\n    }\r\n\r\n    fetchBoardByID(boardID){\r\n        return axios.get(USER_API_BASE_URL2 + '/' + boardID);\r\n    }\r\n\r\n    deleteBoard(boardID){\r\n        return axios.delete(USER_API_BASE_URL2 + '/' + boardID);\r\n    }\r\n\r\n    addBoard(board){\r\n        return axios.post(USER_API_BASE_URL2, board);\r\n    }\r\n\r\n    editBoard(board){\r\n        return axios.put(USER_API_BASE_URL2 + '/' + board.bid, board);\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from \"@material-ui/core\";\r\n\r\nclass PCBoardList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            boards: [],\r\n            paging: {},\r\n            p_num: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadBoardList();\r\n    }\r\n\r\n    reloadBoardList = () => {\r\n        ApiService.fetchBoards(this.state.p_num)\r\n            .then(res => {\r\n                this.setState({\r\n                    boards: res.data.list,\r\n                    paging: res.data.pagingData,\r\n                    p_num: res.data.pagingData.currentPageNum\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('reloadBoardList() 에러', err);\r\n            })\r\n    }\r\n\r\n    listBoard(p_num) {\r\n        console.log(\"pageNum : \" + p_num);\r\n        ApiService.fetchBoards(p_num)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    p_num: res.data.pagingData.currentPageNum,\r\n                    paging: res.data.pagingData,\r\n                    boards: res.data.list\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    viewPaging() {\r\n        const pageNums = [];\r\n\r\n        for (let i = this.state.paging.pageNumStart; i <= this.state.paging.pageNumEnd; i++) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return (pageNums.map((page) =>\r\n            <li className=\"page-item\" key={page.toString()}>\r\n                <a className=\"page-link\" onClick={() => this.listBoard(page)}>{page}</a>\r\n            </li>\r\n        ));\r\n    }\r\n\r\n    isPagingPrev() {\r\n        if (this.state.paging.prev) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard((this.state.paging.currentPageNum - 1))} tabIndex=\"-1\">Prev</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    isPagingNext() {\r\n        if (this.state.paging.next) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard((this.state.paging.currentPageNum + 1))} tabIndex=\"-1\">Next</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    isMoveToFirstPage() {\r\n        if (this.state.p_num !== 1) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard(1)} tabIndex=\"-1\">Move to First Page</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    isMoveToLastPage() {\r\n        if (this.state.p_num !== this.state.paging.pageNumCountTotal) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard((this.state.paging.pageNumCountTotal))} tabIndex=\"-1\">LastPage({this.state.paging.pageNumCountTotal})</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    testBoard(bid) {\r\n        this.props.history.push('/board/' + bid);\r\n    }\r\n\r\n    createBoard = () => {\r\n\r\n        window.localStorage.removeItem(\"boardID\");\r\n        this.props.history.push('/createboard');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <TableContainer component={Paper}>\r\n                    <div className=\"cdiv\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-primary\" id=\"btnWrite\" onClick={this.createBoard}>글쓰기</button>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>No</TableCell>\r\n                                    <TableCell align=\"right\">제목</TableCell>\r\n                                    <TableCell align=\"right\">닉네임</TableCell>\r\n                                    <TableCell align=\"right\">작성일</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.state.boards.map(board =>\r\n                                    <TableRow key={board.id}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {board.bid}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <a onClick={() => this.testBoard(board.bid)}>{board.title}</a>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{board.nickname}</TableCell>\r\n                                        <TableCell align=\"right\">{board.createdate}</TableCell>\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <div className=\"row\">\r\n                            <nav aria-label=\"Page Navigation\">\r\n                                <ul className=\"pagination\">\r\n                                    {\r\n                                        this.isMoveToFirstPage()\r\n                                    }\r\n                                    {\r\n                                        this.isPagingPrev()\r\n                                    }\r\n                                    {\r\n                                        this.viewPaging()\r\n                                    }\r\n                                    {\r\n                                        this.isPagingNext()\r\n                                    }\r\n                                    {\r\n                                        this.isMoveToLastPage()\r\n                                    }\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </TableContainer>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default PCBoardList","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './NavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCCreateBoard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            nickname: '',\r\n            password: '',\r\n            title: '',\r\n            content: '',\r\n            message: null\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    saveBoard = (e) => {\r\n        e.preventDefault();\r\n\r\n        let board = {\r\n            nickname: this.state.nickname,\r\n            password: this.state.password,\r\n            title: this.state.title,\r\n            content: this.state.content\r\n        }\r\n\r\n        ApiService.addBoard(board)\r\n        .then( res => {\r\n            this.setState({\r\n                message: board.nickname + '의 게시글 등록'\r\n            })\r\n        console.log(this.state.message);\r\n        this.props.history.push('/board');\r\n        })\r\n        .catch(err => {\r\n            console.log('saveBoard() 에러' + err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n            <Container>\r\n                <NavBar />\r\n            </Container>\r\n                <Typography variant=\"h4\" style={style}>글쓰기</Typography>\r\n                <form>\r\n\r\n                    <TextField type=\"text\" placeholder=\"작성자\" name = \"nickname\"\r\n                        fullWidth margin=\"normal\" value = {this.state.nickname} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"password\" placeholder=\"비밀번호\" name = \"password\"\r\n                        fullWidth margin=\"normal\" value = {this.state.password} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"text\" placeholder=\"제목\" name = \"title\"\r\n                        fullWidth margin=\"normal\" value = {this.state.title} onChange={this.onChange}/>\r\n                    \r\n                    <TextField type=\"text\" placeholder=\"내용\" name = \"content\" fullWidth margin=\"normal\" \r\n                    value = {this.state.content} onChange={this.onChange} multiline rows={20}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick = {this.saveBoard}>작성</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default PCCreateBoard","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBar from './NavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCCreateBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            bid: this.props.match.params.bid,\r\n            board: {},\r\n            message: '',\r\n            passwd: '',\r\n            msg: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApiService.fetchBoardByID(this.state.bid).then(res => {\r\n            this.setState({ board: res.data });\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    editBoard = (BID) => {\r\n        if (this.state.passwd !== this.state.board.password) {\r\n            this.setState({\r\n                msg: '암호가 틀립니다'\r\n            });\r\n        }\r\n        else {\r\n            window.localStorage.setItem(\"boardID\", BID);\r\n            this.props.history.push('/edit-board');\r\n        }\r\n    }\r\n\r\n    deleteBoard = (BID) => {\r\n\r\n        if (this.state.passwd !== this.state.board.password) {\r\n            this.setState({\r\n                msg: '암호가 틀립니다'\r\n            });\r\n        }\r\n        else {\r\n            ApiService.deleteBoard(BID)\r\n                .then(res => {\r\n                    this.setState({\r\n                        message: 'Board Deleted Successfully'\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log('deleteBoard() 에러' + err);\r\n                })\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <form>\r\n                    <TextField type=\"text\" placeholder=\"제목\" name=\"title\"\r\n                        fullWidth margin=\"normal\" value={this.state.board.title} onChange={this.onChange} \r\n                        InputProps={{\r\n                            readOnly: true\r\n                        }}\r\n                        />\r\n                    <label>{this.state.board.nickname} | {this.state.board.createdate}</label>\r\n\r\n                    <TextField type=\"text\" placeholder=\"내용\" name=\"content\" fullWidth margin=\"normal\"\r\n                        variant=\"outlined\" value={this.state.board.content} onChange={this.onChange} multiline rows={20} \r\n                        InputProps={{\r\n                            readOnly: true\r\n                        }}\r\n                        />\r\n\r\n                    <TextField type=\"password\" placeholder=\"비밀번호\" name=\"passwd\" variant=\"outlined\"\r\n                        value={this.state.passwd} onChange={this.onChange} />\r\n                    <label>{this.state.msg}</label><br /><br />\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.editBoard(this.state.board.bid)}>수정</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.deleteBoard(this.state.board.bid)}>삭제</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PCCreateBoard","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './NavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCUpdateBoard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            bid: 0,\r\n            title: '',\r\n            nickname: '',\r\n            password: '',\r\n            content: '',\r\n            createdate: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBoard();\r\n    }\r\n\r\n    loadBoard = () => {\r\n        ApiService.fetchBoardByID(window.localStorage.getItem(\"boardID\"))\r\n        .then(res => {\r\n            let board = res.data;\r\n            this.setState({\r\n                bid: board.bid,\r\n                title: board.title,\r\n                nickname: board.nickname,\r\n                password: board.password,\r\n                content: board.content,\r\n                createdate: board.createdate\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log('loadBoard() 에러', err);\r\n        });\r\n    }\r\n\r\n    saveBoard = (e) => {\r\n        e.preventDefault();\r\n\r\n        let board = {\r\n            bid: this.state.bid,\r\n            title: this.state.title,\r\n            nickname: this.state.nickname,\r\n            password: this.state.password,\r\n            content: this.state.content,\r\n            createdate: this.state.createdate\r\n        }\r\n\r\n        ApiService.editBoard(board)\r\n        .then(res => {\r\n            this.setState({\r\n                message: board.bid + '번 게시글 수정'\r\n            })\r\n            this.props.history.push('/board/' + window.localStorage.getItem(\"boardID\"));\r\n        })\r\n        .catch(err => {\r\n            console.log('saveBoard() 에러', err);\r\n        })\r\n        \r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    goback = () => {\r\n        this.props.history.push('/board/' + window.localStorage.getItem(\"boardID\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n            <Container>\r\n                <NavBar />\r\n            </Container>\r\n                <Typography variant=\"h4\" style={style}>글쓰기</Typography>\r\n                <form>\r\n\r\n                    <TextField type=\"text\" placeholder=\"작성자\" name = \"nickname\"\r\n                        fullWidth margin=\"normal\" value = {this.state.nickname} onChange={this.onChange}\r\n                        InputProps={{\r\n                            readOnly: true\r\n                        }}\r\n                        />\r\n\r\n                    <TextField type=\"text\" placeholder=\"제목\" name = \"title\"\r\n                        fullWidth margin=\"normal\" value = {this.state.title} onChange={this.onChange}/>\r\n                    \r\n                    <TextField type=\"text\" placeholder=\"내용\" name = \"content\" fullWidth margin=\"normal\" \r\n                    value = {this.state.content} onChange={this.onChange} multiline rows={20}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.saveBoard}>수정</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.goback}>취소</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default PCUpdateBoard","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Main extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <div className=\"cdiv\">\r\n                    <center>\r\n                    <Typography variant=\"h2\" style={style}>\r\n                        Spring & React Project\r\n                    </Typography>\r\n                    </center>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst style = {\r\n    flexGrow: 1\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport { BrowserRouter, Route} from 'react-router-dom';\r\nimport BoardList from './BoardList';\r\nimport CreateBoard from './CreateBoard';\r\nimport BoardView from './BoardView';\r\nimport UpdateBoard from './UpdateBoard';\r\nimport Main from './Main';\r\n\r\n\r\nconst AppRouter = () => {\r\n    return(\r\n        <div>\r\n            <BrowserRouter>\r\n                <div style={style}>\r\n                    <switch>\r\n                        <Route exact path=\"/\" component={Main}/>\r\n                        <Route path = \"/createboard\" component={CreateBoard}/>\r\n                        <Route path = \"/board/:bid\" component={BoardView}></Route>\r\n                        <Route path = \"/edit-board\" component={UpdateBoard}></Route>\r\n                        <Route exact path = \"/board\" component={BoardList}/>\r\n                    </switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = {\r\n    marginTop: '20px'\r\n}\r\n\r\nexport default AppRouter;","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass PCNavBar extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar>\r\n        <nav className=\"navbar navbar-expand-lg bg-primary navbar-dark nav-fixed-top\">\r\n          <div className=\"container-fluid\">\r\n            <RouterLink className=\"navbar-brand\" to=\"/\">Home</RouterLink>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <RouterLink className=\"nav-link\" to=\"/board\" activeClassName=\"active\">Board</RouterLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PCNavBar;","import React, { Component } from 'react';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from \"@material-ui/core\";\r\n\r\nclass PCBoardList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            boards: [],\r\n            paging: {},\r\n            p_num: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadBoardList();\r\n    }\r\n\r\n    reloadBoardList = () => {\r\n        ApiService.fetchBoards(this.state.p_num)\r\n            .then(res => {\r\n                this.setState({\r\n                    boards: res.data.list,\r\n                    paging: res.data.pagingData,\r\n                    p_num: res.data.pagingData.currentPageNum\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('reloadBoardList() 에러', err);\r\n            })\r\n    }\r\n\r\n    listBoard(p_num) {\r\n        console.log(\"pageNum : \" + p_num);\r\n        ApiService.fetchBoards(p_num)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    p_num: res.data.pagingData.currentPageNum,\r\n                    paging: res.data.pagingData,\r\n                    boards: res.data.list\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    viewPaging() {\r\n        const pageNums = [];\r\n\r\n        for (let i = this.state.paging.pageNumStart; i <= this.state.paging.pageNumEnd; i++) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return (pageNums.map((page) =>\r\n            <li className=\"page-item\" key={page.toString()}>\r\n                <a className=\"page-link\" onClick={() => this.listBoard(page)}>{page}</a>\r\n            </li>\r\n        ));\r\n    }\r\n\r\n    isPagingPrev() {\r\n        if (this.state.paging.prev) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard((this.state.paging.currentPageNum - 1))} tabIndex=\"-1\">Prev</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    isPagingNext() {\r\n        if (this.state.paging.next) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard((this.state.paging.currentPageNum + 1))} tabIndex=\"-1\">Next</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    isMoveToFirstPage() {\r\n        if (this.state.p_num !== 1) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard(1)} tabIndex=\"-1\">Move to First Page</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    isMoveToLastPage() {\r\n        if (this.state.p_num !== this.state.paging.pageNumCountTotal) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={() => this.listBoard((this.state.paging.pageNumCountTotal))} tabIndex=\"-1\">LastPage({this.state.paging.pageNumCountTotal})</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    testBoard(bid) {\r\n        this.props.history.push('/board/' + bid);\r\n    }\r\n\r\n    createBoard = () => {\r\n\r\n        window.localStorage.removeItem(\"boardID\");\r\n        this.props.history.push('/createboard');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <TableContainer component={Paper}>\r\n                    <div className=\"cdiv\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-primary\" id=\"btnWrite\" onClick={this.createBoard}>글쓰기</button>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>No</TableCell>\r\n                                    <TableCell align=\"right\">제목</TableCell>\r\n                                    <TableCell align=\"right\">닉네임</TableCell>\r\n                                    <TableCell align=\"right\">작성일</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.state.boards.map(board =>\r\n                                <TableRow key={board.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {board.bid}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <a onClick={() => this.testBoard(board.bid)}>{board.title}</a>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{board.nickname}</TableCell>\r\n                                    <TableCell align=\"right\">{board.createdate}</TableCell>\r\n                                </TableRow>\r\n                                    )}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <div className=\"row\">\r\n                            <nav aria-label=\"Page Navigation\">\r\n                                <ul className=\"pagination\">\r\n                                    {\r\n                                        this.isMoveToFirstPage()\r\n                                    }\r\n                                    {\r\n                                        this.isPagingPrev()\r\n                                    }\r\n                                    {\r\n                                        this.viewPaging()\r\n                                    }\r\n                                    {\r\n                                        this.isPagingNext()\r\n                                    }\r\n                                    {\r\n                                        this.isMoveToLastPage()\r\n                                    }\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </TableContainer>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default PCBoardList","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCCreateBoard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            nickname: '',\r\n            password: '',\r\n            title: '',\r\n            content: '',\r\n            message: null\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    saveBoard = (e) => {\r\n        e.preventDefault();\r\n\r\n        let board = {\r\n            nickname: this.state.nickname,\r\n            password: this.state.password,\r\n            title: this.state.title,\r\n            content: this.state.content\r\n        }\r\n\r\n        ApiService.addBoard(board)\r\n        .then( res => {\r\n            this.setState({\r\n                message: board.nickname + '의 게시글 등록'\r\n            })\r\n        console.log(this.state.message);\r\n        this.props.history.push('/board');\r\n        })\r\n        .catch(err => {\r\n            console.log('saveBoard() 에러' + err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n            <Container>\r\n                <NavBar />\r\n            </Container>\r\n                <Typography variant=\"h4\" style={style}>글쓰기</Typography>\r\n                <form>\r\n\r\n                    <TextField type=\"text\" placeholder=\"작성자\" name = \"nickname\"\r\n                        fullWidth margin=\"normal\" value = {this.state.nickname} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"password\" placeholder=\"비밀번호\" name = \"password\"\r\n                        fullWidth margin=\"normal\" value = {this.state.password} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"text\" placeholder=\"제목\" name = \"title\"\r\n                        fullWidth margin=\"normal\" value = {this.state.title} onChange={this.onChange}/>\r\n                    \r\n                    <TextField type=\"text\" placeholder=\"내용\" name = \"content\" fullWidth margin=\"normal\" \r\n                    value = {this.state.content} onChange={this.onChange} multiline rows={20}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick = {this.saveBoard}>작성</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default PCCreateBoard","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCCreateBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            bid: this.props.match.params.bid,\r\n            board: {},\r\n            message: '',\r\n            passwd: '',\r\n            msg: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApiService.fetchBoardByID(this.state.bid).then(res => {\r\n            this.setState({ board: res.data });\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    editBoard = (BID) => {\r\n        if (this.state.passwd !== this.state.board.password) {\r\n            this.setState({\r\n                msg: '암호가 틀립니다'\r\n            });\r\n        }\r\n        else {\r\n            window.localStorage.setItem(\"boardID\", BID);\r\n            this.props.history.push('/edit-board');\r\n        }\r\n    }\r\n\r\n    deleteBoard = (BID) => {\r\n\r\n        if (this.state.passwd !== this.state.board.password) {\r\n            this.setState({\r\n                msg: '암호가 틀립니다'\r\n            });\r\n        }\r\n        else {\r\n            ApiService.deleteBoard(BID)\r\n                .then(res => {\r\n                    this.setState({\r\n                        message: 'Board Deleted Successfully'\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log('deleteBoard() 에러' + err);\r\n                })\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <form>\r\n                    <TextField type=\"text\" placeholder=\"제목\" name=\"title\"\r\n                        fullWidth margin=\"normal\" value={this.state.board.title} onChange={this.onChange} \r\n                        InputProps={{\r\n                            readOnly: true\r\n                        }}\r\n                        />\r\n                    <label>{this.state.board.nickname} | {this.state.board.createdate}</label>\r\n\r\n                    <TextField type=\"text\" placeholder=\"내용\" name=\"content\" fullWidth margin=\"normal\"\r\n                        variant=\"outlined\" value={this.state.board.content} onChange={this.onChange} multiline rows={20} \r\n                        InputProps={{\r\n                            readOnly: true\r\n                        }}\r\n                        />\r\n\r\n                    <TextField type=\"password\" placeholder=\"비밀번호\" name=\"passwd\" variant=\"outlined\"\r\n                        value={this.state.passwd} onChange={this.onChange} />\r\n                    <label>{this.state.msg}</label><br /><br />\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.editBoard(this.state.board.bid)}>수정</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.deleteBoard(this.state.board.bid)}>삭제</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PCCreateBoard","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCUpdateBoard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            bid: 0,\r\n            title: '',\r\n            nickname: '',\r\n            password: '',\r\n            content: '',\r\n            createdate: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBoard();\r\n    }\r\n\r\n    loadBoard = () => {\r\n        ApiService.fetchBoardByID(window.localStorage.getItem(\"boardID\"))\r\n        .then(res => {\r\n            let board = res.data;\r\n            this.setState({\r\n                bid: board.bid,\r\n                title: board.title,\r\n                nickname: board.nickname,\r\n                password: board.password,\r\n                content: board.content,\r\n                createdate: board.createdate\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log('loadBoard() 에러', err);\r\n        });\r\n    }\r\n\r\n    saveBoard = (e) => {\r\n        e.preventDefault();\r\n\r\n        let board = {\r\n            bid: this.state.bid,\r\n            title: this.state.title,\r\n            nickname: this.state.nickname,\r\n            password: this.state.password,\r\n            content: this.state.content,\r\n            createdate: this.state.createdate\r\n        }\r\n\r\n        ApiService.editBoard(board)\r\n        .then(res => {\r\n            this.setState({\r\n                message: board.bid + '번 게시글 수정'\r\n            })\r\n            this.props.history.push('/board/' + window.localStorage.getItem(\"boardID\"));\r\n        })\r\n        .catch(err => {\r\n            console.log('saveBoard() 에러', err);\r\n        })\r\n        \r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    goback = () => {\r\n        this.props.history.push('/board/' + window.localStorage.getItem(\"boardID\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n            <Container>\r\n                <NavBar />\r\n            </Container>\r\n                <Typography variant=\"h4\" style={style}>글쓰기</Typography>\r\n                <form>\r\n\r\n                    <TextField type=\"text\" placeholder=\"작성자\" name = \"nickname\"\r\n                        fullWidth margin=\"normal\" value = {this.state.nickname} onChange={this.onChange}\r\n                        InputProps={{\r\n                            readOnly: true\r\n                        }}\r\n                        />\r\n\r\n                    <TextField type=\"text\" placeholder=\"제목\" name = \"title\"\r\n                        fullWidth margin=\"normal\" value = {this.state.title} onChange={this.onChange}/>\r\n                    \r\n                    <TextField type=\"text\" placeholder=\"내용\" name = \"content\" fullWidth margin=\"normal\" \r\n                    value = {this.state.content} onChange={this.onChange} multiline rows={20}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.saveBoard}>수정</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.goback}>취소</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default PCUpdateBoard","import React, { Component } from 'react';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass PCMain extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <div className=\"cdiv\">\r\n                    <center>\r\n                    <Typography variant=\"h2\" style={style}>\r\n                        Spring & React Project\r\n                    </Typography>\r\n                    </center>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst style = {\r\n    flexGrow: 1\r\n}\r\n\r\nexport default PCMain","import React from 'react';\r\nimport { BrowserRouter, Route} from 'react-router-dom';\r\nimport PCBoardList from './PCBoardList';\r\nimport PCCreateBoard from './PCCreateBoard';\r\nimport PCBoardView from './PCBoardView';\r\nimport PCUpdateBoard from './PCUpdateBoard';\r\nimport PCMain from './PCMain';\r\n\r\n\r\nconst AppRouter = () => {\r\n    return(\r\n        <div>\r\n            <BrowserRouter>\r\n                <div style={style}>\r\n                    <switch>\r\n                        <Route exact path = \"/board\" component={PCBoardList}/>\r\n                        <Route path = \"/createboard\" component={PCCreateBoard}/>\r\n                        <Route path = \"/board/:bid\" component={PCBoardView}></Route>\r\n                        <Route path = \"/edit-board\" component={PCUpdateBoard}></Route>\r\n                        <Route exact path=\"/\" component={PCMain}/>\r\n                    </switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = {\r\n    marginTop: '20px'\r\n}\r\n\r\nexport default AppRouter;","import './App.css';\nimport React from 'react';\nimport {useMediaQuery} from \"react-responsive\"\nimport AppRouter from './Mobile/RouterComponent';\nimport PCAppRouter from './PC/PCRouterComponent';\n\n\nfunction App() {\n\n  const isPc = useMediaQuery({\n    query : \"(min-width:1024px)\"\n  });\n\n  const isTablet = useMediaQuery({\n    query : \"(min-width:768px) and (max-width:1023px)\"\n  });\n\n  const isMobile = useMediaQuery({\n    query : \"(max-width:767px)\"\n  });\n\n  return (\n    <div>\n      {isPc && <PCAppRouter/> }\n      {isTablet && <AppRouter/> }\n      {isMobile && <AppRouter/> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}