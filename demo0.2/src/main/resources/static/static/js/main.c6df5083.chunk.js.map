{"version":3,"sources":["logo.svg","Mobile/NavBar.jsx","ApiService.js","Mobile/AddUserComponent.jsx","Mobile/RouterComponent.jsx","PC/PCNavBar.jsx","PC/PCAddUserComponent.jsx","PC/PCBoardList.jsx","PC/UserTable.jsx","PC/PCCreateBoard.jsx","PC/PCBoardView.jsx","PC/PCUpdateBoard.jsx","PC/PCRouterComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","handleDrawerToggle","setState","toggle","state","classes","this","className","root","AppBar","Toolbar","IconButton","menuButton","edge","aria-lable","color","onClick","Typography","variant","style","Drawer","open","MenuItem","Link","component","RouterLink","to","React","Component","flexGrow","withStyles","USER_API_BASE_URL","USER_API_BASE_URL2","axios","get","userID","delete","user","post","put","id","boardID","board","bid","AddUserComponent","onChange","e","target","name","value","saveUser","preventDefault","username","password","firstName","lastName","age","salary","ApiService","addUser","then","res","message","console","log","history","push","catch","err","Container","formContainer","TextField","type","placeholder","fullWidth","margin","Button","display","flexFlow","justifyContent","marginTop","AppRouter","exact","path","PCNavBar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","activeClassName","faker","seed","Array","fill","map","random","uuid","email","internet","phone","phoneNumber","PCBoardList","reloadBoardList","fetchBoards","boards","data","handleChangePage","event","newPage","page","handleChangeRowsPerPage","rowsPerPage","createBoard","window","localStorage","removeItem","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","testBoard","title","nickname","createdate","TableFooter","TablePagination","count","length","onChangePage","onChangeRowsPerPage","UserTable","PCCreateBoard","saveBoard","content","addBoard","multiline","rows","editBoard","BID","passwd","msg","setItem","deleteBoard","match","params","fetchBoardByID","PCUpdateBoard","loadBoard","getItem","goback","PCBoardView","App","isPc","useMediaQuery","query","isTablet","isMobile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6df5083.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: false\r\n        };\r\n    }\r\n\r\n    handleDrawerToggle = () => this.setState({\r\n         toggle: !this.state.toggle \r\n        })\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <IconButton className={classes.menuButton} edge=\"start\" aria-lable=\"Menu\" color=\"inherit\" onClick={this.handleDrawerToggle}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    <   Typography variant=\"h6\" style={style}>\r\n                            React User Application\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer open={this.state.toggle}>\r\n                    <MenuItem onClick={this.handleDrawerToggle}>\r\n                        <Link component={RouterLink} to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleDrawerToggle}>\r\n                        <Link component={RouterLink} to=\"/add-user\">\r\n                            GoUser\r\n                        </Link>\r\n                    </MenuItem>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst style = {\r\n    flexGrow: 1\r\n}\r\n\r\nexport default withStyles(styles)(NavBar);","import axios from \"axios\";\r\n\r\nconst USER_API_BASE_URL = \"http://localhost:8080/users\";\r\nconst USER_API_BASE_URL2 = \"http://localhost:8080/board\";\r\n\r\nclass ApiService{\r\n    fetchUsers() {\r\n        return axios.get(USER_API_BASE_URL);\r\n    }\r\n\r\n    fetchUserByID(userID){\r\n        return axios.get(USER_API_BASE_URL + '/' + userID);\r\n    }\r\n\r\n    deleteUser(userID){\r\n        return axios.delete(USER_API_BASE_URL + '/' + userID);\r\n    }\r\n\r\n    addUser(user){\r\n        return axios.post(USER_API_BASE_URL, user);\r\n    }\r\n\r\n    editUser(user){\r\n        return axios.put(USER_API_BASE_URL + '/' + user.id, user);\r\n    }\r\n    \r\n\r\n    \r\n    fetchBoards() {\r\n        return axios.get(USER_API_BASE_URL2);\r\n    }\r\n\r\n    fetchBoardByID(boardID){\r\n        return axios.get(USER_API_BASE_URL2 + '/' + boardID);\r\n    }\r\n\r\n    deleteBoard(boardID){\r\n        return axios.delete(USER_API_BASE_URL2 + '/' + boardID);\r\n    }\r\n\r\n    addBoard(board){\r\n        return axios.post(USER_API_BASE_URL2, board);\r\n    }\r\n\r\n    editBoard(board){\r\n        return axios.put(USER_API_BASE_URL2 + '/' + board.bid, board);\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import React, {Component} from 'react';\r\nimport ApiService from '../ApiService';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './NavBar';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass AddUserComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            age: '',\r\n            salary: '',\r\n            message: null\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    saveUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            age: this.state.age,\r\n            salary: this.state.salary\r\n        }\r\n\r\n        ApiService.addUser(user)\r\n        .then( res => {\r\n            this.setState({\r\n                message: user.username + '님이 등록댐'\r\n            })\r\n        console.log(this.state.message);\r\n        this.props.history.push('/users');\r\n        })\r\n        .catch( err => {\r\n            console.log('saveUser() 에러', err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <NavBar/>\r\n                </Container>\r\n                <Typography variant=\"h4\" style={style}>Add User</Typography>\r\n                <form style={formContainer}>\r\n\r\n                    <TextField type=\"text\" placeholder=\"username\" name = \"username\"\r\n                        fullWidth margin=\"normal\" value = {this.state.username} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"password\" placeholder=\"Password\" name = \"password\"\r\n                        fullWidth margin=\"normal\" value = {this.state.password} onChange={this.onChange}/>\r\n\r\n                    <TextField placeholder=\"Firstname\" name = \"firstName\"\r\n                        fullWidth margin=\"normal\" value = {this.state.firstName} onChange={this.onChange}/>\r\n                    \r\n                    <TextField placeholder=\"Lastname\" name = \"lastName\"\r\n                        fullWidth margin=\"normal\" value = {this.state.lastName} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"number\" placeholder=\"age\" name = \"age\"\r\n                        fullWidth margin=\"normal\" value = {this.state.age} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"number\" placeholder=\"Salary\" name = \"salary\"\r\n                        fullWidth margin=\"normal\" value = {this.state.salary} onChange={this.onChange}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick = {this.saveUser}>Save</Button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst formContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap'\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default AddUserComponent;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport NavBar from './NavBar';\r\nimport AddUserComponent from './AddUserComponent';\r\n\r\n\r\nconst AppRouter = () => {\r\n    return(\r\n        <div>\r\n            <BrowserRouter>\r\n                <div style={style}>\r\n                    <switch>\r\n                        <Route exact path=\"/users\" component={NavBar}/>\r\n                        <Route path = \"/add-user\" component={AddUserComponent}/>\r\n                        <Route exact path=\"/\" component={NavBar}/>\r\n                    </switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = {\r\n    marginTop: '20px'\r\n}\r\n\r\nexport default AppRouter;","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass PCNavBar extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar>\r\n        <nav className=\"navbar navbar-expand-lg bg-primary navbar-dark nav-fixed-top\">\r\n          <div className=\"container-fluid\">\r\n            <RouterLink className=\"navbar-brand\" to=\"/\">Home</RouterLink>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <RouterLink className=\"nav-link\" to=\"/testboardList\" activeClassName=\"active\">Users</RouterLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <RouterLink className=\"nav-link\" to=\"/board\" activeClassName=\"active\">Board</RouterLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PCNavBar;","import React, {Component} from 'react';\r\nimport ApiService from '../ApiService';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass AddUserComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            age: '',\r\n            salary: '',\r\n            message: null\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    saveUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            age: this.state.age,\r\n            salary: this.state.salary\r\n        }\r\n\r\n        ApiService.addUser(user)\r\n        .then( res => {\r\n            this.setState({\r\n                message: user.username + '님이 등록댐'\r\n            })\r\n        console.log(this.state.message);\r\n        this.props.history.push('/users');\r\n        })\r\n        .catch( err => {\r\n            console.log('saveUser() 에러', err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <NavBar/>\r\n                </Container>\r\n                <Typography variant=\"h4\" style={style}>Add User</Typography>\r\n                <form style={formContainer}>\r\n\r\n                    <TextField type=\"text\" placeholder=\"username\" name = \"username\"\r\n                        fullWidth margin=\"normal\" value = {this.state.username} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"password\" placeholder=\"Password\" name = \"password\"\r\n                        fullWidth margin=\"normal\" value = {this.state.password} onChange={this.onChange}/>\r\n\r\n                    <TextField placeholder=\"Firstname\" name = \"firstName\"\r\n                        fullWidth margin=\"normal\" value = {this.state.firstName} onChange={this.onChange}/>\r\n                    \r\n                    <TextField placeholder=\"Lastname\" name = \"lastName\"\r\n                        fullWidth margin=\"normal\" value = {this.state.lastName} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"number\" placeholder=\"age\" name = \"age\"\r\n                        fullWidth margin=\"normal\" value = {this.state.age} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"number\" placeholder=\"Salary\" name = \"salary\"\r\n                        fullWidth margin=\"normal\" value = {this.state.salary} onChange={this.onChange}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick = {this.saveUser}>Save</Button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst formContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap'\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default AddUserComponent;","import React, { Component } from 'react';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport faker from \"faker/locale/ko\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nimport ApiService from '../ApiService';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableFooter,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Paper\r\n} from \"@material-ui/core\";\r\n\r\nfaker.seed(123);\r\n\r\nconst users = Array(53)\r\n    .fill()\r\n    .map(() => ({\r\n        id: faker.random.uuid(),\r\n        name: faker.name.lastName() + faker.name.firstName(),\r\n        email: faker.internet.email(),\r\n        phone: faker.phone.phoneNumber()\r\n    }));\r\n\r\nclass PCBoardList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            boards: [],\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadBoardList();\r\n    }\r\n\r\n    reloadBoardList = () => {\r\n        ApiService.fetchBoards()\r\n            .then(res => {\r\n                this.setState({\r\n                    boards: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('reloadBoardList() 에러', err);\r\n            })\r\n    }\r\n\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage: event.target.value,\r\n            page: 0\r\n        })\r\n    }\r\n\r\n\r\n    testBoard(bid) {\r\n        this.props.history.push('/board/' + bid);\r\n    }\r\n\r\n    createBoard = () => {\r\n\r\n        window.localStorage.removeItem(\"boardID\");\r\n        this.props.history.push('/createboard');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <TableContainer component={Paper}>\r\n                    <div className=\"cdiv\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-primary\" id=\"btnWrite\" onClick={this.createBoard}>글쓰기</button>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>No</TableCell>\r\n                                    <TableCell align=\"right\">제목</TableCell>\r\n                                    <TableCell align=\"right\">닉네임</TableCell>\r\n                                    <TableCell align=\"right\">작성일</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.state.boards.map(board =>\r\n                                <TableRow key={board.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {board.bid}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <a onClick={() => this.testBoard(board.bid)}>{board.title}</a>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{board.nickname}</TableCell>\r\n                                    <TableCell align=\"right\">{board.createdate}</TableCell>\r\n                                </TableRow>\r\n                                    )}\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                <TableRow>\r\n                                    <TablePagination\r\n                                        count={this.state.boards.length}\r\n                                        page={this.state.page}\r\n                                        rowsPerPage={this.state.rowsPerPage}\r\n                                        onChangePage={this.handleChangePage}\r\n                                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </div>\r\n                </TableContainer>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default PCBoardList","import React, { useState } from \"react\";\r\nimport faker from \"faker/locale/ko\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfaker.seed(123);\r\n\r\nconst users = Array(53)\r\n  .fill()\r\n  .map(() => ({\r\n    id: faker.random.uuid(),\r\n    name: faker.name.lastName() + faker.name.firstName(),\r\n    email: faker.internet.email(),\r\n    phone: faker.phone.phoneNumber()\r\n  }));\r\n\r\nfunction UserTable() {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n    <Container>\r\n    <NavBar />\r\n</Container>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>No</TableCell>\r\n            <TableCell align=\"right\">제목</TableCell>\r\n            <TableCell align=\"right\">닉네임</TableCell>\r\n            <TableCell align=\"right\">작성일</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n            .map(({ id, name, email, phone }, i) => (\r\n              <TableRow key={id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {page * rowsPerPage + i + 1}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{name}</TableCell>\r\n                <TableCell align=\"right\">{email}</TableCell>\r\n                <TableCell align=\"right\">{phone}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              count={users.length}\r\n              page={page}\r\n              rowsPerPage={rowsPerPage}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default UserTable;","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCCreateBoard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            nickname: '',\r\n            password: '',\r\n            title: '',\r\n            content: '',\r\n            message: null\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    saveBoard = (e) => {\r\n        e.preventDefault();\r\n\r\n        let board = {\r\n            nickname: this.state.nickname,\r\n            password: this.state.password,\r\n            title: this.state.title,\r\n            content: this.state.content\r\n        }\r\n\r\n        ApiService.addBoard(board)\r\n        .then( res => {\r\n            this.setState({\r\n                message: board.nickname + '의 게시글 등록'\r\n            })\r\n        console.log(this.state.message);\r\n        this.props.history.push('/board');\r\n        })\r\n        .catch(err => {\r\n            console.log('saveBoard() 에러' + err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n            <Container>\r\n                <NavBar />\r\n            </Container>\r\n                <Typography variant=\"h4\" style={style}>글쓰기</Typography>\r\n                <form>\r\n\r\n                    <TextField type=\"text\" placeholder=\"작성자\" name = \"nickname\"\r\n                        fullWidth margin=\"normal\" value = {this.state.nickname} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"password\" placeholder=\"비밀번호\" name = \"password\"\r\n                        fullWidth margin=\"normal\" value = {this.state.password} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"text\" placeholder=\"제목\" name = \"title\"\r\n                        fullWidth margin=\"normal\" value = {this.state.title} onChange={this.onChange}/>\r\n                    \r\n                    <TextField type=\"text\" placeholder=\"내용\" name = \"content\" fullWidth margin=\"normal\" \r\n                    value = {this.state.content} onChange={this.onChange} multiline rows={20}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick = {this.saveBoard}>작성</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst formContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap'\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default PCCreateBoard","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\nimport { Label } from '@material-ui/icons';\r\n\r\n\r\nclass PCCreateBoard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            bid: this.props.match.params.bid,\r\n            board: {},\r\n            message: '',\r\n            passwd: '',\r\n            msg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApiService.fetchBoardByID(this.state.bid).then(res => {\r\n            this.setState({ board: res.data });\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    editBoard = (BID) => {\r\n        if (this.state.passwd != this.state.board.password) {\r\n            this.setState({\r\n                msg: '암호가 틀립니다'\r\n            });\r\n        }\r\n        else {\r\n            window.localStorage.setItem(\"boardID\", BID);\r\n            this.props.history.push('/edit-board');\r\n        }\r\n    }\r\n\r\n    deleteBoard = (BID) => {\r\n\r\n        if (this.state.passwd != this.state.board.password) {\r\n            this.setState({\r\n                msg: '암호가 틀립니다'\r\n            });\r\n        }\r\n        else {\r\n            ApiService.deleteBoard(BID)\r\n                .then(res => {\r\n                    this.setState({\r\n                        message: 'Board Deleted Successfully'\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log('deleteBoard() 에러' + err);\r\n                })\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n                <Container>\r\n                    <NavBar />\r\n                </Container>\r\n                <form>\r\n                    <TextField type=\"text\" placeholder=\"제목\" name=\"title\"\r\n                        fullWidth margin=\"normal\" value={this.state.board.title} onChange={this.onChange} />\r\n                    <label>{this.state.board.nickname} | {this.state.board.createdate}</label>\r\n\r\n                    <TextField type=\"text\" placeholder=\"내용\" name=\"content\" fullWidth margin=\"normal\"\r\n                        variant=\"outlined\" value={this.state.board.content} onChange={this.onChange} multiline rows={20} />\r\n\r\n                    <TextField type=\"password\" placeholder=\"비밀번호\" name=\"passwd\" variant=\"outlined\"\r\n                        value={this.state.passwd} onChange={this.onChange} />\r\n                    <label>{this.state.msg}</label><br /><br />\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.editBoard(this.state.board.bid)}>수정</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => this.deleteBoard(this.state.board.bid)}>삭제</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst formContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap'\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default PCCreateBoard","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar from './PCNavBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport ApiService from '../ApiService';\r\n\r\n\r\nclass PCUpdateBoard extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            bid: 0,\r\n            title: '',\r\n            nickname: '',\r\n            password: '',\r\n            content: '',\r\n            createdate: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBoard();\r\n    }\r\n\r\n    loadBoard = () => {\r\n        ApiService.fetchBoardByID(window.localStorage.getItem(\"boardID\"))\r\n        .then(res => {\r\n            let board = res.data;\r\n            this.setState({\r\n                bid: board.bid,\r\n                title: board.title,\r\n                nickname: board.nickname,\r\n                password: board.password,\r\n                content: board.content,\r\n                createdate: board.createdate\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log('loadBoard() 에러', err);\r\n        });\r\n    }\r\n\r\n    saveBoard = (e) => {\r\n        e.preventDefault();\r\n\r\n        let board = {\r\n            bid: this.state.bid,\r\n            title: this.state.title,\r\n            nickname: this.state.nickname,\r\n            password: this.state.password,\r\n            content: this.state.content,\r\n            createdate: this.state.createdate\r\n        }\r\n\r\n        ApiService.editBoard(board)\r\n        .then(res => {\r\n            this.setState({\r\n                message: board.bid + '번 게시글 수정'\r\n            })\r\n            this.props.history.push('/board/' + window.localStorage.getItem(\"boardID\"));\r\n        })\r\n        .catch(err => {\r\n            console.log('saveBoard() 에러', err);\r\n        })\r\n        \r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    goback = () => {\r\n        this.props.history.push('/board/' + window.localStorage.getItem(\"boardID\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cdiv\">\r\n            <Container>\r\n                <NavBar />\r\n            </Container>\r\n                <Typography variant=\"h4\" style={style}>글쓰기</Typography>\r\n                <form>\r\n\r\n                    <TextField type=\"text\" placeholder=\"작성자\" name = \"nickname\"\r\n                        fullWidth margin=\"normal\" value = {this.state.nickname} onChange={this.onChange}/>\r\n\r\n                    <TextField type=\"text\" placeholder=\"제목\" name = \"title\"\r\n                        fullWidth margin=\"normal\" value = {this.state.title} onChange={this.onChange}/>\r\n                    \r\n                    <TextField type=\"text\" placeholder=\"내용\" name = \"content\" fullWidth margin=\"normal\" \r\n                    value = {this.state.content} onChange={this.onChange} multiline rows={20}/>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.saveBoard}>수정</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.goback}>취소</Button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst formContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap'\r\n}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nexport default PCUpdateBoard","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport PCNavBar from './PCNavBar';\r\nimport AddUserComponent from './PCAddUserComponent';\r\nimport PCBoardList from './PCBoardList';\r\nimport UserTable from './UserTable';\r\nimport PCCreateBoard from './PCCreateBoard';\r\nimport PCBoardView from './PCBoardView';\r\nimport PCUpdateBoard from './PCUpdateBoard';\r\n\r\n\r\nconst AppRouter = () => {\r\n    return(\r\n        <div>\r\n            <BrowserRouter>\r\n                <div style={style}>\r\n                    <switch>\r\n                        <Route exact path=\"/users\" component={PCNavBar}/>\r\n                        <Route path = \"/add-user\" component={AddUserComponent}/>\r\n                        <Route exact path = \"/board\" component={PCBoardList}/>\r\n                        <Route path = \"/createboard\" component={PCCreateBoard}/>\r\n                        <Route path = \"/board/:bid\" component={PCBoardView}></Route>\r\n                        <Route path = \"/edit-board\" component={PCUpdateBoard}></Route>\r\n                        <Route exact path=\"/\" component={PCNavBar}/>\r\n                    </switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = {\r\n    marginTop: '20px'\r\n}\r\n\r\nexport default AppRouter;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {useMediaQuery} from \"react-responsive\"\nimport NavBar from './Mobile/NavBar';\nimport AppRouter from './Mobile/RouterComponent';\nimport PCAppRouter from './PC/PCRouterComponent';\n\n\nfunction App() {\n\n  const isPc = useMediaQuery({\n    query : \"(min-width:1024px)\"\n  });\n\n  const isTablet = useMediaQuery({\n    query : \"(min-width:768px) and (max-width:1023px)\"\n  });\n\n  const isMobile = useMediaQuery({\n    query : \"(max-width:767px)\"\n  });\n\n  return (\n    <div>\n      {isPc && <PCAppRouter/> }\n      {isTablet && <AppRouter/> }\n      {isMobile && <AppRouter/> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}